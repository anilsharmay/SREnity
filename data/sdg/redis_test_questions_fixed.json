[
  {
    "question": "What is Ubuntu used for in the context of PostgreSQL?",
    "answer": "Custom PostgreSQL Package Build Process for Ubuntu Xenial 16.04.",
    "context": "[PatroniLongRunningTransactionDetected](/patroni/alerts/PatroniLongRunningTransactionDetected/) - [PatroniScrapeFailures](/patroni/alerts/PatroniScrapeFailures/) - [PostgresSplitBrain](/patroni/alerts/PostgresSplitBrain/) - [walgBaseBackupDelayed, WALGBaseBackupFailed](/patroni/alerts/walgBaseBackup/) - [Steps to create (or recreate) a Standby CLuster using a Snapshot from a Production cluster as Master cluster (instead of pg\\_basebackup)](/patroni/build_cluster_from_snapshot/) - [Check the status of transaction wraparound Runbook](/patroni/check_wraparound/) - [Custom PostgreSQL Package Build Process for Ubuntu Xenial 16.04](/patroni/custom_postgres_packages/) - [database\\_peak\\_analysis](/patroni/database_peak_analysis/) - [How and when to deprovision the db-benchmarking environment](/patroni/deprovision-db-benchmarking-env/) - [Patroni GCS Snapshots](/patroni/gcs-snapshots/) - [Geo Patroni Cluster Management](/patroni/geo-patroni-cluster/) - [gitlab-com-wale-backups](/patroni/gitlab-com-wale-backups/) - [gitlab-com-walg-backups](/patroni/gitlab-com-walg-backups/) - [Postgres (Patroni) Service](/patroni/) - [Log analysis on PostgreSQL, Pgbouncer, Patroni and consul Runbook](/patroni/log_analysis/) - [Making a manual clone of the DB for the data team](/patroni/manual_data_team_clone/) - [Mapping Postgres Statements, Slowlogs, Activity Monitoring and Traces](/patroni/mapping_statements/) - [OS Upgrade Reference Architecture](/patroni/os_upgrade_reference_architecture/) - [Patroni Cluster Management](/patroni/patroni-management/) - [performance-degradation-troubleshooting](/patroni/performance-degradation-troubleshooting/) - [pg\\_collect\\_query\\_data](/patroni/pg_collect_query_data/) - [Postgresql minor upgrade](/patroni/pg_minor_upgrade/) - [Pg\\_repack using gitlab-pgrepack](/patroni/pg_repack/) - [`pg\\_xid\\_wraparound` Saturation Alert](/patroni/pg_xid_wraparound_alert/) - [`pg\\_txid\\_xmin\\_age` Saturation Alert](/patroni/pg_xid_xmin_age_alert/) - [pg-ext-manager](/patroni/pg-ext-manager/) - [PostgreSQL HA](/patroni/pg-ha/) - [pgbadger Runbook](/patroni/pgbadger_report/) - [Postgresql troubleshooting](/patroni/postgres/) - [postgres\\_exporter](/patroni/postgres_exporter/) - [GitLab application-side reindexing](/patroni/postgres-automatic-reindexing/) - [postgres-backups-verification-failures](/patroni/postgres-backups-verification-failures/) - [postgres-checkup](/patroni/postgres-checkup/) - [Dealing with Data Corruption in PostgreSQL](/patroni/postgres-data-corruption/) - [Diagnosing long running transactions](/patroni/postgres-long-running-transaction/) - [Postgres maintenance](/patroni/postgres-maintenance/) - [Postgresql](/patroni/postgresql/) - [PostgreSQL Backups: WAL-G](/patroni/postgresql-backups-wale-walg/) - [postgresql-buffermapping-lwlock-contention](/patroni/postgresql-buffermapping-lwlock-contention/) - [PostgreSQL](/patroni/postgresql-disk-space/) - [postgresql-locking](/patroni/postgresql-locking/) - [How to evaluate load from queries](/patroni/postgresql-query-load-evaluation/) - [PostgreSQL Trigram Indexes](/patroni/postgresql-rebuild-trigram-indexes/) - [Adding a PostgreSQL replica](/patroni/postgresql-replica/) - [Credential rotation](/patroni/postgresql-role-credential-rotation/) - [PostgreSQL subtransactions](/patroni/postgresql-subtransactions/) - [PostgreSQL VACUUM](/patroni/postgresql-vacuum/) - [Primary Database Node CPU Saturation Analysis](/patroni/primary_db_node_cpu_saturation/) - [Primary Database Node WAL Generation Saturation Analysis](/patroni/primary_db_node_wal_generation_saturation/) - [How to provision the benchmark environment](/patroni/provisioning_bench_env/) - [SQL query analysis and optimization for Postgres](/patroni/query-analysis/) - [Rails SQL Apdex alerts](/patroni/rails-sql-apdex-slow/) - [Rotating Rails' PostgreSQL password](/patroni/rotating-rails-postgresql-password/) - [Scale Down Patroni](/patroni/scale-down-patroni/) - [Scale Up Patroni](/patroni/scale-up-patroni/) - [High-level performance analysis and troubleshooting of a Postgres node](/patroni/single-node-high-level/) - [Handling Unhealthy Patroni Replica](/patroni/unhealthy_patroni_node_handling/) - [Roles/Users grants and permission Runbook](/patroni/user_grants_permission/) - [using-wale-gpg](/patroni/using-wale-gpg/) - [Postgres wait events analysis (a.k.a. Active Session History; ASH dashboard)](/patroni/wait-events-analisys/) - [WAL logs analysis](/patroni/wal_log_analysis/) - [Zero Downtime Postgres Database Decomposition](/patroni/zero-downtime-database-decomposition/) - patroni-ci - [CI Postgres (Patroni) Service](/patroni-ci/) - [Recovering from CI Patroni cluster lagging too much or becoming completely broken](/patroni-ci/recovering_patroni_ci_intense_lagging_or_replication_stopped/) - patroni-registry - [Registry Postgres (Patroni) Service](/patroni-registry/) - patroni-sec - [Sec Postgres (Patroni) Service](/patroni-sec/) - pd-event-logger-7760xa - [events](/pd-event-logger-7760xa/events/) - [Logs PagerDuty incident events to ElasticSearch Service](/pd-event-logger-7760xa/) - pgbouncer - alerts - [component\\_saturation\\_slo\\_out\\_of\\_bounds:pgbouncer\\_single\\_core](/pgbouncer/alerts/pgbouncer_single_core/) - [PGBouncer Primary Database Pool Service](/pgbouncer/) - [patroni-consul-postgres-pgbouncer-interactions](/pgbouncer/patroni-consul-postgres-pgbouncer-interactions/) - [Add a new PgBouncer instance](/pgbouncer/pgbouncer-add-instance/) - [pgbouncer-applications](/pgbouncer/pgbouncer-applications/) - [PgBouncer connection management and troubleshooting](/pgbouncer/pgbouncer-connections/) - [Removing a PgBouncer instance](/pgbouncer/pgbouncer-remove-instance/) - [Sidekiq or Web/API is using most of its PgBouncer connections](/pgbouncer/pgbouncer-saturation/) - [Pgbouncer Service](/pgbouncer/service-pgbouncer/) - pgbouncer-ci - [CI PGBouncer Primary Database Pool Service](/pgbouncer-ci/) - pgbouncer-registry - [Registry PGBouncer Primary Database Pool Service](/pgbouncer-registry/) - pgbouncer-sec - [Sec PGBouncer Primary Database Pool Service](/pgbouncer-sec/) - pingdom - [Pingdom Service](/pingdom/) - [Pingdom](/pingdom/pingdom/) - pipeline-validation-service - [Pipeline Validation Service](/pipeline-validation-service/) - plantuml - [PlantUML Service](/plantuml/) - [PlantUML](/plantuml/readiness/) - portal-poc - [Experimental Engineering Portal Service](/portal-poc/) - postgres-archive - [Postgres DR Archive Service](/postgres-archive/) - [Postgres archive replicas](/postgres-archive/postgres-dr-replicas/) - postgres-dr-delayed - [Postgres DR Delayed Replica Service](/postgres-dr-delayed/) - [Postgres Replicas](/postgres-dr-delayed/postgres-dr-replicas/) - product\\_analytics - [Product Analytics ClickHouse Failure Remediation, Backup & Restore Process](/product_analytics/clickhouse-backup-restore/) - [Product Analytics Service](/product_analytics/) - [Product Analytics Kubernetes Architecture](/product_analytics/k8s-architecture/) - [Product Analytics SSL Troubleshooting](/product_analytics/ssl-troubleshooting/) - psql-timings - [PSQL Timings Service](/psql-timings/) - pubsub - [Pubsub for Logging Service](/pubsub/) - [PubSub Queuing Rate Increasing](/pubsub/pubsub-queing/) - pvs - [Pvs Service](/pvs/) - rate-limiting - [index](/rate-limiting/) - redis - [Blocking individual IPs using Redis and Rack Attack](/redis/ban-an-IP-with-redis/) - [Clearing sessions for anonymous users](/redis/clear_anonymous_sessions/) - [Persistent Redis Service](/redis/) - [Redis on Kubernetes](/redis/kubernetes/) - [Memory space analysis with cupcake-rdb](/redis/memory-space-analysis-cupcake-rdb/) - [Provisioning Redis Cluster](/redis/provisioning-redis-cluster/) - [Troubleshooting](/redis/redis/) - [Redis Cluster](/redis/redis-cluster/) - [Functional Partitioning](/redis/redis-functional-partitioning/) - [Redis RDB Snapshots](/redis/redis-rdb-snapshots/) - [Redis-Sidekiq catchall workloads reduction](/redis/redis-sidekiq-catchall-workloads-reduction/) - [A survival guide for SREs to working with Redis at GitLab](/redis/redis-survival-guide-for-sres/) - [Scaling Redis Cluster](/redis/scaling-redis-cluster/) - redis-cluster-cache - [Redis Cluster Cache Service](/redis-cluster-cache/) - [Removing cache entries from Redis](/redis-cluster-cache/remove-cache-entries/) - redis-cluster-chat-cache - [Redis Cluster Chat Cache Service](/redis-cluster-chat-cache/) - redis-cluster-database-lb - [Redis Cluster Database Loadbalancing Service](/redis-cluster-database-lb/) - redis-cluster-feature-flag - [Redis Cluster Feature Flag Service](/redis-cluster-feature-flag/) - redis-cluster-queues-meta - [Redis Cluster Queues Meta Service](/redis-cluster-queues-meta/) - redis-cluster-ratelimiting - [Redis Cluster RateLimiting Service](/redis-cluster-ratelimiting/) - redis-cluster-registry - [Redis Cluster Registry Service](/redis-cluster-registry/) - redis-cluster-repo-cache - [Redis Cluster Repo Cache Service](/redis-cluster-repo-cache/) - redis-cluster-sessions - [Redis Cluster Sessions Service](/redis-cluster-sessions/) - redis-cluster-shared-state - [Redis Cluster SharedState Service](/redis-cluster-shared-state/) - redis-feature-flag - [Redis-feature-flag Service](/redis-feature-flag/) - redis-pubsub - [Redis Pub/Sub Service](/redis-pubsub/) - redis-ratelimiting - [Redis-ratelimiting Service](/redis-ratelimiting/) - redis-registry-cache - [Redis Registry Cache Service](/redis-registry-cache/) - redis-sessions - [Redis Sessions Service](/redis-sessions/) - redis-sidekiq - [Redis Sidekiq Service](/redis-sidekiq/) - redis-tracechunks - [Redis TraceChunks Service](/redis-tracechunks/) - registry - alerts - [ContainerRegistryDBLoadBalancerReplicaPoolSize](/registry/alerts/ContainerRegistryDBLoadBalancerReplicaPoolSize/) - [ContainerRegistryNotifications](/registry/alerts/ContainerRegistryNotifications/) - [PatroniRegistryServiceDnsLookupsApdexSLOViolation](/registry/alerts/PatroniRegistryServiceDnsLookupsApdexSLOViolation/) - [Database Connection Pool Saturation](/registry/app-db-conn-pool-saturation/) - [Container Registry Batched Background Migrations](/registry/background-migrations/) - [Container Registry CDN](/registry/cdn/) - [Container Registry Database Index Bloat](/registry/db-index-bloat/) - [Container Registry Database Load Balancing](/registry/db-load-balancing/) - [Container Registry database post-deployment migrations](/registry/db-post-deployment-migrations/) - [gitlab-registry](/registry/gitlab-registry/) - [Container Registry Service](/registry/) - [High Number of Overdue Online GC Tasks](/registry/online-gc-high-overdue-tasks/) - [High Number of Pending or Failed Outgoing Webhook Notifications](/registry/webhook-notifications/) - release-management - [High build pressure](/release-management/build_pressure/) - [High deploy pressure](/release-management/deploy_pressure/) - release-tooling - [Delivery Release Tooling Service](/release-tooling/) - renovate - [Renovate at GitLab: Current Implementation Documentation](/renovate/) - repository-mirroring - [Repository Mirroring Service](/repository-mirroring/) - [Mirror Updates Silently Failing](/repository-mirroring/mirror-updates-silently-failing/) - [Pull Mirroring Timeout with Large LFS Files](/repository-mirroring/pull-mirroring-timeout-with-large-lfs-files/) - runway - [Restore/Backup Runway-managed Cloud SQL](/runway/cloudsql_backup_restore/) - [Cloud SQL Restore Pipeline Troubleshooting](/runway/cloudsql_restore_pipeline_troubleshooting/) - [Runway Platform Service](/runway/) - [Privileged Access Management](/runway/privileged_access_management/) - runway-db-example - [Example Runway-managed Postgres Service](/runway-db-example/) - runway-redis-example - [Example Runway-managed Redis Service](/runway-redis-example/) - sast-service - [SAST Scanner Service for SAST in the IDE](/sast-service/) - search - [Global Search Service](/search/) - secret-detection - [Detects secret leaks in the given payloads Service](/secret-detection/) - secret-revc-worker - [Secret Revocation Worker Service](/secret-revc-worker/) - secret-revocation - [Secret Revocation Service](/secret-revocation/) - security-patching - alerts - [UbuntuLivepatch](/security-patching/alerts/UbuntuLivepatch/) - linux-os - [Linux OS Patching](/security-patching/linux-os/linux-os-patching/) - [Patching Notifications](/security-patching/linux-os/notifications/) - systems - [Bastions](/security-patching/linux-os/systems/bastions/) - [Console](/security-patching/linux-os/systems/console/) - [Deploy](/security-patching/linux-os/systems/deploy/) - [Gitaly](/security-patching/linux-os/systems/gitaly/) - [GKE](/security-patching/linux-os/systems/gke/) - [HAProxy](/security-patching/linux-os/systems/haproxy/) - [Patroni](/security-patching/linux-os/systems/patroni/) - [PGBouncer](/security-patching/linux-os/systems/pgbouncer/) - [Redis](/security-patching/linux-os/systems/redis/) - [Runner Managers](/security-patching/linux-os/systems/runner-managers/) - sentry - [Monitoring Service](/sentry/) - [Troubleshooting](/sentry/sentry/) - service\\_desk - [Debugging Service Desk](/service_desk/) - sidekiq - alerts - [Title: SidekiqQueueTooLarge](/sidekiq/alerts/SidekiqQueueTooLarge/) - [Disabling Sidekiq workers](/sidekiq/disabling-a-worker/) - [Sidekiq Background Jobs Service](/sidekiq/) - [Pull mirror overdue queue is too large](/sidekiq/large-pull-mirror-queue/) - [Sidekiq queue migration](/sidekiq/queue-migration/) - [sharding](/sidekiq/sharding/) - [sidekiq\\_error\\_rate\\_high](/sidekiq/sidekiq_error_rate_high/) - [Sidekiq Concurrency Limit](/sidekiq/sidekiq-concurrency-limit/) - [Poking around at sidekiq's running state](/sidekiq/sidekiq-inspection/) - [Sidekiq queue no longer",
    "ground_truth": "Custom PostgreSQL Package Build Process for Ubuntu Xenial 16.04."
  },
  {
    "question": "How do you configure GitLab Rails when setting up a Redis cluster?",
    "answer": "To configure GitLab Rails when setting up a Redis cluster, you need to ensure that the name of the instance matches the object name in lowercase and kebab-case/snake-case in the application. For example, if you have a service named 'redis-cluster-chat-cache', in GitLab Rails, the object should be 'Gitlab::Redis::Chat'. You should use 'chat' when configuring the secret for the application in console and Kubernetes. Additionally, you must update the JSON payload in the vault secrets to include the new instance details, ensuring that the password for the instance is correctly set in the configuration.",
    "context": "3. Provision VMs](#3-provision-vms) - [4. Initialising the cluster](#4-initialising-the-cluster) - [5. Validation](#5-validation) - [Configuring the applications](#configuring-the-applications) - [1. Configure console instances](#1-configure-console-instances) - [2. Verification of config in a VM](#2-verification-of-config-in-a-vm) - [3. Configure Gitlab Rails](#3-configure-gitlab-rails) - [4. Troubleshooting](#4-troubleshooting) ## On this page - [Overview](#_top) - [Setting up instances](#setting-up-instances) - [1. Generate Redis passwords](#1-generate-redis-passwords) - [2. Create Chef roles](#2-create-chef-roles) - [3. Provision VMs](#3-provision-vms) - [4. Initialising the cluster](#4-initialising-the-cluster) - [5. Validation](#5-validation) - [Configuring the applications](#configuring-the-applications) - [1. Configure console instances](#1-configure-console-instances) - [2. Verification of config in a VM](#2-verification-of-config-in-a-vm) - [3. Configure Gitlab Rails](#3-configure-gitlab-rails) - [4. Troubleshooting](#4-troubleshooting) # Provisioning Redis Cluster This document outlines the steps for provisioning a Redis Cluster. Former attempts are documented here: - [`redis-cluster-ratelimiting`](https://gitlab.com/gitlab-com/gl-infra/scalability/-/issues/2256) - [`redis-cluster-chat-cache`](https://gitlab.com/gitlab-com/gl-infra/scalability/-/issues/2358) ## Setting up instances [Section titled “Setting up instances”](#setting-up-instances) First, this guide defines a few variables in `<>`, namely: - `ENV`: `pre`, `gstg`, `gprd` - `GCP_PROJECT`: `gitlab-production` or `gitlab-staging-1` - `INSTANCE_TYPE`: `feature-flag` - `RAILS_INSTANCE_NAME`: The name that GitLab Rails would recognise. This matches `redis.xxx.yml` or the 2nd-top-level key in `redis.yml` (top-level key being `production`) - `RAILS_INSTANCE_NAME_OMNIBUS`: `RAILS_INSTANCE_NAME` but using underscore, i.e. `feature_flag` instead of `feature-flag` - `RAILS_CLASS_NAME`: The class which would connect to the new Redis Cluster. e.g. `Gitlab::Redis::FeatureFlag`. - `REPLICA_REDACTED`: Generated in [Generate Redis passwords step](#1-generate-redis-passwords) - `RAILS_REDACTED`: Generated in [Generate Redis passwords step](#1-generate-redis-passwords) - `EXPORTER_REDACTED`: Generated in [Generate Redis passwords step](#1-generate-redis-passwords) - `CONSOLE_REDACTED`: Generated in [Generate Redis passwords step](#1-generate-redis-passwords) When configuring the application, note that the name of the instance must match the object name in lowercase and kebab-case/snake-case in the application. E.g. We have `redis-cluster-chat-cache` service but in GitLab Rails, the object is `Gitlab::Redis::Chat`. Hence `chat` should be used when configuring the secret for the application in console and Kubernetes. **Note:** To avoid mistakes in manually copy-pasting the variables in `<>` above during a provisioning session, it is recommended to prepare this doc with all the variables replaced beforehand. ### 1. Generate Redis passwords [Section titled “1. Generate Redis passwords”](#1-generate-redis-passwords) Generate four passwords, `REPLICA_REDACTED`, `RAILS_REDACTED`, `EXPORTER_REDACTED`, and `CONSOLE_REDACTED` using: ``` for I in REPLICA_REDACTED RAILS_REDACTED EXPORTER_REDACTED CONSOLE_REDACTED; do echo $I; openssl rand -hex 32; done ``` Update both `redis-cluster` and `redis-exporter` gkms vault secrets using these commands in the [`chef-repo`](https://gitlab.com/gitlab-com/gl-infra/chef-repo/-/tree/master): ``` ./bin/gkms-vault-edit redis-cluster <ENV> ``` Update the JSON payload to include the new instance details: ``` { ..., \"redis-cluster-<INSTANCE_TYPE>\": { \"redis_conf\": { \"masteruser\": \"replica\", \"masterauth\": \"<REPLICA_REDACTED>\", \"user\": [ \"default off\", \"replica on ~* &* +@all ><REPLICA_REDACTED>\", \"console on ~* &* +@all ><CONSOLE_REDACTED>\", \"redis_exporter on +client +ping +info +config|get +cluster|info +slowlog +latency +memory +select +get +scan +xinfo +type +pfcount +strlen +llen +scard +zcard +hlen +xlen +eval allkeys ><EXPORTER_REDACTED>\", \"rails on ~* &* +@all -debug ><RAILS_REDACTED>\" ] } } } ``` Do the same for ``` ./bin/gkms-vault-edit redis-exporter <ENV> ``` Modify the existing JSON ``` { \"redis_exporter\": { \"redis-cluster-<INSTANCE_TYPE>\": { \"env\": { \"REDIS_PASSWORD\": \"<EXPORTER_REDACTED>\" } } } } ``` ### 2. Create Chef roles [Section titled “2. Create Chef roles”](#2-create-chef-roles) Set the new chef roles and add the new role to the list of gitlab-redis roles in -infra-prometheus-server role. An example MR can be found [here](https://gitlab.com/gitlab-com/gl-infra/chef-repo/-/merge_requests/3494). ### 3. Provision VMs [Section titled “3. Provision VMs”](#3-provision-vms) Provision the VMs via the generic-stor/google terraform module. This is done in the [config-mgmt project in the ops environment](https://ops.gitlab.net/gitlab-com/gl-infra/config-mgmt/). An example MR can be found [here](https://ops.gitlab.net/gitlab-com/gl-infra/config-mgmt/-/merge_requests/5811). After the MR is merged and applied, check the VM state via: ``` gcloud compute instances list --project <GCP_PROJECT> | grep 'redis-cluster-<INSTANCE_TYPE>' ``` You need to wait for the initial chef-client run to complete. One way to check is to tail the serial port output to check when the initial run is completed. An example: ``` gcloud compute --project=<GCP_PROJECT> instances tail-serial-port-output redis-cluster-<INSTANCE_TYPE>-shard-01-01-db-<ENV> --zone us-east1-{c/b/d} ``` ### 4. Initialising the cluster [Section titled “4. Initialising the cluster”](#4-initialising-the-cluster) a. SSH into one of the instance: ``` ssh redis-cluster-<INSTANCE_TYPE>-shard-01-01-db-<ENV>.c.<GCP_PROJECT>.internal ``` b. Run the following: ``` export ENV=<ENV> export PROJECT=<GCP_PROJECT> export DEPLOYMENT=redis-cluster-<INSTANCE_TYPE> ``` c. Use the following command to connect the master-nodes and initialise a working cluster. Add more shard FQDN where necessary. e.g. `$DEPLOYMENT-shard-<shard_number>-01-db-$ENV.c.$PROJECT.internal:6379`. ``` sudo gitlab-redis-cli --cluster create \\ $DEPLOYMENT-shard-01-01-db-$ENV.c.$PROJECT.internal:6379 \\ $DEPLOYMENT-shard-02-01-db-$ENV.c.$PROJECT.internal:6379 \\ $DEPLOYMENT-shard-03-01-db-$ENV.c.$PROJECT.internal:6379 ``` Use the following command to connect the remaining nodes to the cluster. Update `{01, 02, 03, ... n}-{02,03,..m}` where `n` is the number of shards and `m` is the number of instances per shard. ``` for i in {01,02,03}-{02,03}; do sudo gitlab-redis-cli --cluster add-node \\ $DEPLOYMENT-shard-$i-db-$ENV.c.$PROJECT.internal:6379 \\ $DEPLOYMENT-shard-01-01-db-$ENV.c.$PROJECT.internal:6379 sleep 2 done ``` Use the following command, to assign the replicas within each shard. Update `{01, 02, 03, ... n}-{02,03,..n}` where necessary depending on the cluster-size. ``` for i in {01,02,03}; do for j in {02,03}; do node_id=\"$(sudo gitlab-redis-cli cluster nodes | grep $DEPLOYMENT-shard-$i-01-db-$ENV.c.$PROJECT.internal | awk '{ print $1 }')\"; sudo gitlab-redis-cli -h $DEPLOYMENT-shard-$i-$j-db-$ENV.c.$PROJECT.internal \\ cluster replicate $node_id done done ``` ### 5. Validation [Section titled “5. Validation”](#5-validation) Wait for a few seconds as the nodes need time to gossip. Check the status via: ``` $ sudo gitlab-redis-cli --cluster info $DEPLOYMENT-shard-01-01-db-$ENV.c.$PROJECT.internal:6379 redis-cluster-ratelimiting-shard-01-01-db-gprd.c.gitlab-production.internal:6379 (9b0828e3...) -> 0 keys | 5461 slots | 2 slaves. 10.217.21.3:6379 (ac03fcee...) -> 0 keys | 5461 slots | 2 slaves. 10.217.21.4:6379 (f8341afd...) -> 0 keys | 5462 slots | 2 slaves. [OK] 0 keys in 3 masters. 0.00 keys per slot on average. $ sudo gitlab-redis-cli cluster info | head -n7 cluster_state:ok cluster_slots_assigned:16384 cluster_slots_ok:16384 cluster_slots_pfail:0 cluster_slots_fail:0 cluster_known_nodes:9 cluster_size:3 ``` ## Configuring the applications [Section titled “Configuring the applications”](#configuring-the-applications) ### 1. Configure console instances [Section titled “1. Configure console instances”](#1-configure-console-instances) a. Proxy and authenticate to Hashicorp Vault: ``` glsh vault proxy export VAULT_PROXY_ADDR=\"socks5://localhost:18200\" glsh vault login ``` ``` vault kv get -format=json chef/env/<ENV>/shared/gitlab-omnibus-secrets | jq '.data.data' > data.json cat data.json | jq --arg PASSWORD <RAILS_REDACTED> '.\"omnibus-gitlab\".gitlab_rb.\"gitlab-rails\".redis_yml_override.<RAILS_INSTANCE_NAME_OMNIBUS>.password = $PASSWORD' > data.json.tmp diff -u data.json data.json.tmp mv data.json.tmp data.json vault kv patch chef/env/<ENV>/shared/gitlab-omnibus-secrets @data.json rm data.json OR glsh vault edit-secret chef env/<ENV>/shared/gitlab-omnibus-secrets # Add the following object in .\"omnibus-gitlab\".gitlab_rb.\"gitlab-rails\".redis_yml_override : # \"<RAILS_INSTANCE_NAME_OMNIBUS>\": { # \"password\": <RAILS_REDACTED> # } ``` Update roles/-base.json with the relevant connection details. An example MR can be found [here](https://gitlab.com/gitlab-com/gl-infra/chef-repo/-/merge_requests/3546). ### 2. Verification of config in a VM [Section titled “2. Verification of config in a VM”](#2-verification-of-config-in-a-vm)",
    "ground_truth": "To configure GitLab Rails when setting up a Redis cluster, you need to ensure that the name of the instance matches the object name in lowercase and kebab-case/snake-case in the application. For example, if you have a service named 'redis-cluster-chat-cache', in GitLab Rails, the object should be 'Gitlab::Redis::Chat'. You should use 'chat' when configuring the secret for the application in console and Kubernetes. Additionally, you must update the JSON payload in the vault secrets to include the new instance details, ensuring that the password for the instance is correctly set in the configuration."
  },
  {
    "question": "What are the key components involved in connecting to a database via Teleport, and how do alerts and monitoring play a role in this process?",
    "answer": "Connecting to a database via Teleport involves several key components, including the Teleport Administration interface and the specific connection protocols for databases. Teleport provides a secure way to access databases, ensuring that connections are managed properly. Alerts and monitoring are crucial in this context as they help track the performance and health of the database connections. For instance, alerts can notify administrators about issues such as SSL certificate expiration or high load on the database, allowing for timely interventions to maintain optimal performance.",
    "context": "<1-hop>\n\n[Connecting To a Database via Teleport](/teleport/Connect_to_Database_Console_via_Teleport/) - [Connecting To a Rails Console via Teleport](/teleport/Connect_to_Rails_Console_via_Teleport/) - [Teleport](/teleport/) - [Teleport Administration](/teleport/teleport_admin/) - [Teleport Approver Workflow](/teleport/teleport_approval_workflow/) - [Teleport Disaster Recovery](/teleport/teleport_disaster_recovery/) - [(Title: Name of alert)](/template-alert-playbook/) - [(Title: Service Name)](/template-service-overview/) - thanos - [thanos Service](/thanos/) - token-rotation-management - [Token rotation management Service](/token-rotation-management/) - topology-grpc - [Topology Service gRPC](/topology-grpc/) - topology-rest - [Breakglass](/topology-rest/breakglass/) - [Topology Service Rest](/topology-rest/) - tracing - [Distributed Tracing Service](/tracing/) - tutorials - [Incident Diagnosis in a Symptom-based World](/tutorials/diagnosis/) - [Example Tutorial Template](/tutorials/example_tutorial_template/) - [How to use flamegraphs for performance profiling](/tutorials/how_to_use_flamegraphs_for_perf_profiling/) - [Tutorials](/tutorials/) - [Life of a Git Request](/tutorials/overview_life_of_a_git_request/) - [Life of a Web Request](/tutorials/overview_life_of_a_web_request/) - [Tips for writing tutorials](/tutorials/tips_for_tutorial_writing/) - uncategorized - [about.gitlab.com](/uncategorized/about-gitlab-com/) - [access-gcp-hosts](/uncategorized/access-gcp-hosts/) - [Access Requests](/uncategorized/access-requests/) - [Alert about SSL certificate expiration](/uncategorized/alert-for-ssl-certificate-expiration/) - [Alert Routing](/uncategorized/alert-routing/) - alerts - [component\\_saturation\\_slo\\_out\\_of\\_bounds:gcp\\_quota\\_limit](/uncategorized/alerts/gcp_quota_limit/) - [Alerts Should Have Runbook Annotations](/uncategorized/alerts-should-have-runbook-annotations/) - [Aptly](/uncategorized/aptly/) - [Auto DevOps](/uncategorized/auto-devops/) - [Benchmarking Database Instances](/uncategorized/benchmark-database-instance/) - [Blocking a project causing high load](/uncategorized/block-high-load-project/) - [Blocked user login attempts are high](/uncategorized/blocked-user-logins/) - [Canary in GCP production and staging](/uncategorized/canary/) - [Cloud SQL Data Export](/uncategorized/cloudsql-data-export/) - [Create:Code Review Group Runbook](/uncategorized/code-review-group/) - [Release Artifact Bucket](/uncategorized/creating-bucket-for-release-artifacts/) - [Debug failed chef provisioning](/uncategorized/debug-failed-chef-provisioning/) - [Deleting a project manually](/uncategorized/delete-projects-manually/) - [Deleted Project Restoration](/uncategorized/deleted-project-restore/) - [Deploy Cmd for Chatops](/uncategorized/deploycmd/) - [GitLab dev environment](/uncategorized/dev-environment/) - [disable-chef-runs-on-a-vm](/uncategorized/disable-chef-runs-on-a-vm/) - [Domain Registration](/uncategorized/domain-registration/) - [Error budget weekly reporting](/uncategorized/error-budget-weekly/) - externalvendors - [Getting help with GCP support and Rackspace](/uncategorized/externalvendors/GCP-rackspace-support/) - [Feature Flags](/uncategorized/featureflags/) - [Getting setup with Google gcloud CLI](/uncategorized/gcloud-cli/) - [gcp-network-intelligence](/uncategorized/gcp-network-intelligence/) - [GCP Projects](/uncategorized/gcp-project/) - [Managing Geekbot standups](/uncategorized/geekbot-standup/) - gke-runner - [index](/uncategorized/gke-runner/) - [INSTRUCTIONS](/uncategorized/gke-runner/INSTRUCTIONS/) - [Chef secrets using GKMS](/uncategorized/gkms-chef-secrets/) - [GitLab Flavored Markdown (GLFM)](/uncategorized/glfm-markdown/) - [granting-rails-or-db-access](/uncategorized/granting-rails-or-db-access/) - [GitLab Job Completion](/uncategorized/job_completion/) - [Managing Chef](/uncategorized/manage-chef/) - [Manage DNS entries](/uncategorized/manage-dns-entries/) - [Migration Skipping](/uncategorized/migration-skipping/) - [Missing Repositories](/uncategorized/missing_repos/) - [Google mtail for prometheus metrics](/uncategorized/mtail/) - [namespace-restore](/uncategorized/namespace-restore/) - [Node CPU alerts](/uncategorized/node_cpu/) - [Node Reboots](/uncategorized/node-reboots/) - [Omnibus package troubleshooting](/uncategorized/omnibus-package-updates/) - [OPS-GITLAB-NET Users and Access Tokens](/uncategorized/ops-gitlab-net-pat/) - [OSQuery](/uncategorized/osquery/) - [patching-production](/uncategorized/patching-production/) - [Periodic Job Monitoring](/uncategorized/periodic_job_monitoring/) - [Project exports](/uncategorized/project-export/) - [Rails is down](/uncategorized/rails-is-down/) - release.gitlab.net - [`release.gitlab.net`](/uncategorized/release.gitlab.net/) - [Remove Blobs](/uncategorized/remove-blobs/) - [Removing kernels from fleet](/uncategorized/remove-kernels/) - [Ruby profiling](/uncategorized/ruby-profiling/) - [Shared Configurations](/uncategorized/shared-configurations/) - snowplow - [index](/uncategorized/snowplow/) - [GitLab staging environment](/uncategorized/staging-environment/) - [subnet-allocations](/uncategorized/subnet-allocations/) - [Terraform Broken Main](/uncategorized/terraform-broken-main/) - [Application Database Queries](/uncategorized/tracing-app-db-queries/) - [Upgrades and Rollbacks of Application Code](/uncategorized/upgrade-and-rollback/) - [How to upload a file to Google Cloud Storage from any system without a credentials configuration](/uncategorized/upload-file-to-gcs-using-signed-url/) - [Uploads](/uncategorized/uploads/) - [Workers under heavy load because of being used as a CDN](/uncategorized/workers-high-load/) - [Configuring and Using the Yubikey](/uncategorized/yubikey/) - [Rate of successful user logins is zero](/uncategorized/zero-successful-user-logins/) - vault - [Access Management for Vault](/vault/access/) - [Vault Administration](/vault/administration/) - [Hashicorp Vault for Infrastructure Service](/vault/) - [Troubleshooting Hashicorp Vault](/vault/troubleshooting/) - [How to Use Vault for Secrets Management in Infrastructure](/vault/usage/) - [Vault Audit Log Analysis](/vault/usage-analysis/) - [Vault Secrets Management](/vault/vault/) - version - [version.gitlab.com Service](/version/) - [version.gitlab.com Runbook](/version/version-gitlab-com/) - web - [Diagnostic Reports](/web/diagnostic-reports/) - [GitLab.com Web Service](/web/) - [Rails middleware: path traversal](/web/rails-middleware-path-traversal/) - [Static objects caching](/web/static-objects-caching/) - [Static repository objects caching](/web/static-repository-objects-caching/) - [Workhorse Image Scaler](/web/workhorse-image-scaler/) - web-pages - [GitLab Pages Service](/web-pages/) - websockets - [Websockets Service](/websockets/) - [Custom Websocket Alerts](/websockets/slow-broken-upgrades/) - wikis - [Wikis](/wikis/) - wiz-runtime-sensor - [Wiz Sensor Service](/wiz-runtime-sensor/) - woodhouse - [Woodhouse Service](/woodhouse/) - woodhouse-slack - [Woodhouse Slack bot Service](/woodhouse-slack/) - [Woodhouse-Slack Overview](/woodhouse-slack/overview/) - workhorse - [Workhorse Service](/workhorse/) - [Workhorse Apdex Degradation](/workhorse/workhorse-apdex-degradation/) - workspaces - [Remote Development Workspaces Service](/workspaces/) - zoekt - [Exact code search Service](/zoekt/) (() => { const scroller = document.getElementById('starlight\\_\\_sidebar'); if (!window.\\_starlightScrollRestore || !scroller) return; scroller.scrollTop = window.\\_starlightScrollRestore; delete window.\\_starlightScrollRestore; })(); [GitLab](https://gitlab.com/gitlab-com/runbooks)[Code Context](https://code-context.runway.gitlab.net/runbooks-docs) Select theme DarkLightAuto StarlightThemeProvider.updatePickers(); const a=document.getElementById(\"starlight\\_\\_sidebar\"),n=a?.querySelector(\"sl-sidebar-state-persist\"),o=\"sl-sidebar-state\",i=()=>{let t=[];const e=n?.dataset.hash||\"\";try{const s=sessionStorage.getItem(o),r=JSON.parse(s||\"{}\");Array.isArray(r.open)&&r.hash===e&&(t=r.open)}catch{}return{hash:e,open:t,scroll:a?.scrollTop||0}},c=t=>{try{sessionStorage.setItem(o,JSON.stringify(t))}catch{}},d=()=>c(i()),l=(t,e)=>{const s=i();s.open[e]=t,c(s)};n?.addEventListener(\"click\",t=>{if(!(t.target instanceof Element))return;const e=t.target.closest(\"summary\")?.closest(\"details\");if(!e)return;const s=e.querySelector(\"sl-sidebar-restore\"),r=parseInt(s?.dataset.index||\"\");isNaN(r)||l(!e.open,r)});addEventListener(\"visibilitychange\",()=>{document.visibilityState===\"hidden\"&&d()});addEventListener(\"pageHide\",d); On this page - [Overview](#_top) - [Logging](#logging) ## On this page - [Overview](#_top) - [Logging](#logging) # Redis Pub/Sub Service - [Service Overview](https://dashboards.gitlab.net/d/redis-pubsub-main/redis-pubsub-overview) - **Alerts**: <https://alerts.gitlab.net/#/alerts?filter=%7Btype%3D%22redis-pubsub%22%2C%20tier%3D%22db%22%7D> - **Label**: gitlab-com/gl-infra/production~“Service::RedisPubsub” ## Logging [Section titled “Logging”](#logging) - system [Edit page](https://gitlab.com/gitlab-com/runbooks/-/edit/master/docs/redis-pubsub/README.md) [Previous Redis-feature-flag Service](/redis-feature-flag/) [Next Redis-ratelimiting Service](/redis-ratelimiting/)",
    "ground_truth": "Connecting to a database via Teleport involves several key components, including the Teleport Administration interface and the specific connection protocols for databases. Teleport provides a secure way to access databases, ensuring that connections are managed properly. Alerts and monitoring are crucial in this context as they help track the performance and health of the database connections. For instance, alerts can notify administrators about issues such as SSL certificate expiration or high load on the database, allowing for timely interventions to maintain optimal performance."
  },
  {
    "question": "How do you manage service connections when connecting to a database and what are the best practices for service management in this context?",
    "answer": "When connecting to a database, it is essential to follow best practices for service management. This includes ensuring secure connections, managing access permissions, and monitoring performance. Utilizing tools like Teleport can facilitate secure connections to databases, while implementing service management strategies helps maintain reliability and performance across the deployment processes.",
    "context": "<1-hop>\n\n[Connecting To a Database via Teleport](/teleport/Connect_to_Database_Console_via_Teleport/) - [Connecting To a Rails Console via Teleport](/teleport/Connect_to_Rails_Console_via_Teleport/) - [Teleport](/teleport/) - [Teleport Administration](/teleport/teleport_admin/) - [Teleport Approver Workflow](/teleport/teleport_approval_workflow/) - [Teleport Disaster Recovery](/teleport/teleport_disaster_recovery/) - [(Title: Name of alert)](/template-alert-playbook/) - [(Title: Service Name)](/template-service-overview/) - thanos - [thanos Service](/thanos/) - token-rotation-management - [Token rotation management Service](/token-rotation-management/) - topology-grpc - [Topology Service gRPC](/topology-grpc/) - topology-rest - [Breakglass](/topology-rest/breakglass/) - [Topology Service Rest](/topology-rest/) - tracing - [Distributed Tracing Service](/tracing/) - tutorials - [Incident Diagnosis in a Symptom-based World](/tutorials/diagnosis/) - [Example Tutorial Template](/tutorials/example_tutorial_template/) - [How to use flamegraphs for performance profiling](/tutorials/how_to_use_flamegraphs_for_perf_profiling/) - [Tutorials](/tutorials/) - [Life of a Git Request](/tutorials/overview_life_of_a_git_request/) - [Life of a Web Request](/tutorials/overview_life_of_a_web_request/) - [Tips for writing tutorials](/tutorials/tips_for_tutorial_writing/) - uncategorized - [about.gitlab.com](/uncategorized/about-gitlab-com/) - [access-gcp-hosts](/uncategorized/access-gcp-hosts/) - [Access Requests](/uncategorized/access-requests/) - [Alert about SSL certificate expiration](/uncategorized/alert-for-ssl-certificate-expiration/) - [Alert Routing](/uncategorized/alert-routing/) - alerts - [component\\_saturation\\_slo\\_out\\_of\\_bounds:gcp\\_quota\\_limit](/uncategorized/alerts/gcp_quota_limit/) - [Alerts Should Have Runbook Annotations](/uncategorized/alerts-should-have-runbook-annotations/) - [Aptly](/uncategorized/aptly/) - [Auto DevOps](/uncategorized/auto-devops/) - [Benchmarking Database Instances](/uncategorized/benchmark-database-instance/) - [Blocking a project causing high load](/uncategorized/block-high-load-project/) - [Blocked user login attempts are high](/uncategorized/blocked-user-logins/) - [Canary in GCP production and staging](/uncategorized/canary/) - [Cloud SQL Data Export](/uncategorized/cloudsql-data-export/) - [Create:Code Review Group Runbook](/uncategorized/code-review-group/) - [Release Artifact Bucket](/uncategorized/creating-bucket-for-release-artifacts/) - [Debug failed chef provisioning](/uncategorized/debug-failed-chef-provisioning/) - [Deleting a project manually](/uncategorized/delete-projects-manually/) - [Deleted Project Restoration](/uncategorized/deleted-project-restore/) - [Deploy Cmd for Chatops](/uncategorized/deploycmd/) - [GitLab dev environment](/uncategorized/dev-environment/) - [disable-chef-runs-on-a-vm](/uncategorized/disable-chef-runs-on-a-vm/) - [Domain Registration](/uncategorized/domain-registration/) - [Error budget weekly reporting](/uncategorized/error-budget-weekly/) - externalvendors - [Getting help with GCP support and Rackspace](/uncategorized/externalvendors/GCP-rackspace-support/) - [Feature Flags](/uncategorized/featureflags/) - [Getting setup with Google gcloud CLI](/uncategorized/gcloud-cli/) - [gcp-network-intelligence](/uncategorized/gcp-network-intelligence/) - [GCP Projects](/uncategorized/gcp-project/) - [Managing Geekbot standups](/uncategorized/geekbot-standup/) - gke-runner - [index](/uncategorized/gke-runner/) - [INSTRUCTIONS](/uncategorized/gke-runner/INSTRUCTIONS/) - [Chef secrets using GKMS](/uncategorized/gkms-chef-secrets/) - [GitLab Flavored Markdown (GLFM)](/uncategorized/glfm-markdown/) - [granting-rails-or-db-access](/uncategorized/granting-rails-or-db-access/) - [GitLab Job Completion](/uncategorized/job_completion/) - [Managing Chef](/uncategorized/manage-chef/) - [Manage DNS entries](/uncategorized/manage-dns-entries/) - [Migration Skipping](/uncategorized/migration-skipping/) - [Missing Repositories](/uncategorized/missing_repos/) - [Google mtail for prometheus metrics](/uncategorized/mtail/) - [namespace-restore](/uncategorized/namespace-restore/) - [Node CPU alerts](/uncategorized/node_cpu/) - [Node Reboots](/uncategorized/node-reboots/) - [Omnibus package troubleshooting](/uncategorized/omnibus-package-updates/) - [OPS-GITLAB-NET Users and Access Tokens](/uncategorized/ops-gitlab-net-pat/) - [OSQuery](/uncategorized/osquery/) - [patching-production](/uncategorized/patching-production/) - [Periodic Job Monitoring](/uncategorized/periodic_job_monitoring/) - [Project exports](/uncategorized/project-export/) - [Rails is down](/uncategorized/rails-is-down/) - release.gitlab.net - [`release.gitlab.net`](/uncategorized/release.gitlab.net/) - [Remove Blobs](/uncategorized/remove-blobs/) - [Removing kernels from fleet](/uncategorized/remove-kernels/) - [Ruby profiling](/uncategorized/ruby-profiling/) - [Shared Configurations](/uncategorized/shared-configurations/) - snowplow - [index](/uncategorized/snowplow/) - [GitLab staging environment](/uncategorized/staging-environment/) - [subnet-allocations](/uncategorized/subnet-allocations/) - [Terraform Broken Main](/uncategorized/terraform-broken-main/) - [Application Database Queries](/uncategorized/tracing-app-db-queries/) - [Upgrades and Rollbacks of Application Code](/uncategorized/upgrade-and-rollback/) - [How to upload a file to Google Cloud Storage from any system without a credentials configuration](/uncategorized/upload-file-to-gcs-using-signed-url/) - [Uploads](/uncategorized/uploads/) - [Workers under heavy load because of being used as a CDN](/uncategorized/workers-high-load/) - [Configuring and Using the Yubikey](/uncategorized/yubikey/) - [Rate of successful user logins is zero](/uncategorized/zero-successful-user-logins/) - vault - [Access Management for Vault](/vault/access/) - [Vault Administration](/vault/administration/) - [Hashicorp Vault for Infrastructure Service](/vault/) - [Troubleshooting Hashicorp Vault](/vault/troubleshooting/) - [How to Use Vault for Secrets Management in Infrastructure](/vault/usage/) - [Vault Audit Log Analysis](/vault/usage-analysis/) - [Vault Secrets Management](/vault/vault/) - version - [version.gitlab.com Service](/version/) - [version.gitlab.com Runbook](/version/version-gitlab-com/) - web - [Diagnostic Reports](/web/diagnostic-reports/) - [GitLab.com Web Service](/web/) - [Rails middleware: path traversal](/web/rails-middleware-path-traversal/) - [Static objects caching](/web/static-objects-caching/) - [Static repository objects caching](/web/static-repository-objects-caching/) - [Workhorse Image Scaler](/web/workhorse-image-scaler/) - web-pages - [GitLab Pages Service](/web-pages/) - websockets - [Websockets Service](/websockets/) - [Custom Websocket Alerts](/websockets/slow-broken-upgrades/) - wikis - [Wikis](/wikis/) - wiz-runtime-sensor - [Wiz Sensor Service](/wiz-runtime-sensor/) - woodhouse - [Woodhouse Service](/woodhouse/) - woodhouse-slack - [Woodhouse Slack bot Service](/woodhouse-slack/) - [Woodhouse-Slack Overview](/woodhouse-slack/overview/) - workhorse - [Workhorse Service](/workhorse/) - [Workhorse Apdex Degradation](/workhorse/workhorse-apdex-degradation/) - workspaces - [Remote Development Workspaces Service](/workspaces/) - zoekt - [Exact code search Service](/zoekt/) (() => { const scroller = document.getElementById('starlight\\_\\_sidebar'); if (!window.\\_starlightScrollRestore || !scroller) return; scroller.scrollTop = window.\\_starlightScrollRestore; delete window.\\_starlightScrollRestore; })(); [GitLab](https://gitlab.com/gitlab-com/runbooks)[Code Context](https://code-context.runway.gitlab.net/runbooks-docs) Select theme DarkLightAuto StarlightThemeProvider.updatePickers(); const a=document.getElementById(\"starlight\\_\\_sidebar\"),n=a?.querySelector(\"sl-sidebar-state-persist\"),o=\"sl-sidebar-state\",i=()=>{let t=[];const e=n?.dataset.hash||\"\";try{const s=sessionStorage.getItem(o),r=JSON.parse(s||\"{}\");Array.isArray(r.open)&&r.hash===e&&(t=r.open)}catch{}return{hash:e,open:t,scroll:a?.scrollTop||0}},c=t=>{try{sessionStorage.setItem(o,JSON.stringify(t))}catch{}},d=()=>c(i()),l=(t,e)=>{const s=i();s.open[e]=t,c(s)};n?.addEventListener(\"click\",t=>{if(!(t.target instanceof Element))return;const e=t.target.closest(\"summary\")?.closest(\"details\");if(!e)return;const s=e.querySelector(\"sl-sidebar-restore\"),r=parseInt(s?.dataset.index||\"\");isNaN(r)||l(!e.open,r)});addEventListener(\"visibilitychange\",()=>{document.visibilityState===\"hidden\"&&d()});addEventListener(\"pageHide\",d); On this page - [Overview](#_top) - [Logging](#logging) ## On this page - [Overview](#_top) - [Logging](#logging) # Redis Sidekiq Service - [Service Overview](https://dashboards.gitlab.net/d/redis-sidekiq-main/redis-sidekiq-overview) - **Alerts**: <https://alerts.gitlab.net/#/alerts?filter=%7Btype%3D%22redis-sidekiq%22%2C%20tier%3D%22db%22%7D> - **Label**: gitlab-com/gl-infra/production~“Service::RedisSidekiq” ## Logging [Section titled “Logging”](#logging) - [system](https://log.gprd.gitlab.net/goto/80a1ff609f91b0fb2b770a3a70784be0) [Edit page](https://gitlab.com/gitlab-com/runbooks/-/edit/master/docs/redis-sidekiq/README.md) [Previous Redis Sessions Service](/redis-sessions/) [Next Redis TraceChunks Service](/redis-tracechunks/)",
    "ground_truth": "When connecting to a database, it is essential to follow best practices for service management. This includes ensuring secure connections, managing access permissions, and monitoring performance. Utilizing tools like Teleport can facilitate secure connections to databases, while implementing service management strategies helps maintain reliability and performance across the deployment processes."
  },
  {
    "question": "What steps are involved in deleting cache keys on GitLab.com, and how does Redis Sentinel play a role in this process?",
    "answer": "To delete cache keys on GitLab.com, the process involves two main steps. First, you need to obtain the keys to be deleted, which can be done by running a Ruby script on a secondary Redis instance. This script scans for keys matching a specific pattern, such as 'cache:gitlab:license_key*', and writes them to a file for later deletion. The second step is to delete the specified keys, which is executed on the primary Redis instance using the Gitlab::Redis::Cache connection. This deletion process is designed to minimize operations on the primary Redis instance, as it sleeps for a second after every 10,000 deletions to manage load effectively.\n\nRedis Sentinel is crucial in this infrastructure as it manages the Redis primary and secondary instances. It provides clients with a pointer to the current primary Redis instance and handles reconfiguration of Redis instances based on the cluster's quorum. This ensures that the deletion process can be executed reliably, as clients connect directly to the primary Redis instance identified by Sentinel.",
    "context": "<1-hop>\n\nStep 2: delete the keys](#step-2-delete-the-keys) ## On this page - [Overview](#_top) - [Step 1: obtain the keys to be deleted](#step-1-obtain-the-keys-to-be-deleted) - [Step 2: delete the keys](#step-2-delete-the-keys) # Removing cache entries from Redis Cache invalidation is one of the [hard things](https://martinfowler.com/bliki/TwoHardThings.html). Sometimes we have incidents like [#5478](https://gitlab.com/gitlab-com/gl-infra/production/-/issues/5478) where we end up with invalid data in the cache, and no convenient way to clear it. This document describes an approach for deleting a specified set of cache keys on GitLab.com without consuming excessive Redis resources. This approach is split into two phases: 1. Obtain the keys to be deleted (against a secondary) 2. Delete the specified keys (against the primary) By doing this, we gain a few benefits: 1. We perform as few operations on the primary as necessary. Secondaries do not receive application traffic, and so have more headroom and can tolerate being blocked briefly. 2. We can retain a list of deleted keys for later inspection - for instance, if a user reports an issue, we can check if their cache key was in the list. 3. Obtaining the keys to be deleted may be an iterative, exploratory process. We do not want to conflate this with data deletion, which should ideally be as simple as possible. (In the future we may move to having [version-based cache invalidation](https://gitlab.com/gitlab-com/gl-infra/reliability/-/issues/9815), where this will be simpler. One example is the way it’s possible to [invalidate the Markdown cache](https://docs.gitlab.com/ee/administration/invalidate_markdown_cache.html) - which is in Postgres, not Redis - via the API.) ## Step 1: obtain the keys to be deleted [Section titled “Step 1: obtain the keys to be deleted”](#step-1-obtain-the-keys-to-be-deleted) **On a secondary**, we can run a Ruby script like the below. `REDIS_PASSWORD` is provided as an environment variable. In this example, we’re looking for keys of the form `cache:gitlab:license_key*`, but the general approach will be the same no matter the pattern. ``` require 'redis' pattern = \"cache:gitlab:license_key*\" output = File.open('/tmp/keys-to-delete.txt', 'w') redis = Redis.new(:url => \"redis://#{ENV['REDIS_PASSWORD']}@127.0.0.1\") cursor = '0' loop do cursor, keys = redis.scan(cursor, match: pattern, count: 100000) if keys.count > 0 puts \"Writing #{keys.count}\" keys.each { |key| output.write(key + \"\\n\") } end puts cursor break if cursor == '0' end ``` ## Step 2: delete the keys [Section titled “Step 2: delete the keys”](#step-2-delete-the-keys) This can be run on the console node as `Gitlab::Redis::Cache` will connect to the primary by default. Make sure to copy `/tmp/keys-to-delete.txt` to the console node before starting. It sleeps for a second after every 10 000 deletions. In most cases there should not be many tens of thousands of deletions anyway. ``` lines = File.readlines('/tmp/keys-to-delete.txt') count = 0 Gitlab::Redis::Cache.with do |redis| lines.each do |line| line.rstrip! # Gitlab::Redis::Cache automatically adds the cache:gitlab: namespace, so # we have to remove it. Otherwise we will try to delete keys of the form # cache:gitlab:cache:gitlab:... line.gsub!(/^cache:gitlab:/, '') redis.expire(line, 0) count += 1 if (count % 10000 == 0) puts \"count is #{count}, sleeping...\" sleep 1 end end end ``` [Edit page](https://gitlab.com/gitlab-com/runbooks/-/edit/master/docs/redis-cluster-cache/remove-cache-entries.md) [Previous Redis Cluster Cache Service](/redis-cluster-cache/) [Next Redis Cluster Chat Cache Service](/redis-cluster-chat-cache/)",
    "ground_truth": "To delete cache keys on GitLab.com, the process involves two main steps. First, you need to obtain the keys to be deleted, which can be done by running a Ruby script on a secondary Redis instance. This script scans for keys matching a specific pattern, such as 'cache:gitlab:license_key*', and writes them to a file for later deletion. The second step is to delete the specified keys, which is executed on the primary Redis instance using the Gitlab::Redis::Cache connection. This deletion process is designed to minimize operations on the primary Redis instance, as it sleeps for a second after every 10,000 deletions to manage load effectively.\n\nRedis Sentinel is crucial in this infrastructure as it manages the Redis primary and secondary instances. It provides clients with a pointer to the current primary Redis instance and handles reconfiguration of Redis instances based on the cluster's quorum. This ensures that the deletion process can be executed reliably, as clients connect directly to the primary Redis instance identified by Sentinel."
  },
  {
    "question": "How can I upload a file to Google Cloud Storage using Google Cloud services?",
    "answer": "To upload a file to Google Cloud Storage, you can use the method described in the tutorial titled 'How to upload a file to Google Cloud Storage from any system without a credentials configuration.' This tutorial provides step-by-step instructions on utilizing Google Cloud services for file uploads.",
    "context": "<1-hop>\n\n[Connecting To a Database via Teleport](/teleport/Connect_to_Database_Console_via_Teleport/) - [Connecting To a Rails Console via Teleport](/teleport/Connect_to_Rails_Console_via_Teleport/) - [Teleport](/teleport/) - [Teleport Administration](/teleport/teleport_admin/) - [Teleport Approver Workflow](/teleport/teleport_approval_workflow/) - [Teleport Disaster Recovery](/teleport/teleport_disaster_recovery/) - [(Title: Name of alert)](/template-alert-playbook/) - [(Title: Service Name)](/template-service-overview/) - thanos - [thanos Service](/thanos/) - token-rotation-management - [Token rotation management Service](/token-rotation-management/) - topology-grpc - [Topology Service gRPC](/topology-grpc/) - topology-rest - [Breakglass](/topology-rest/breakglass/) - [Topology Service Rest](/topology-rest/) - tracing - [Distributed Tracing Service](/tracing/) - tutorials - [Incident Diagnosis in a Symptom-based World](/tutorials/diagnosis/) - [Example Tutorial Template](/tutorials/example_tutorial_template/) - [How to use flamegraphs for performance profiling](/tutorials/how_to_use_flamegraphs_for_perf_profiling/) - [Tutorials](/tutorials/) - [Life of a Git Request](/tutorials/overview_life_of_a_git_request/) - [Life of a Web Request](/tutorials/overview_life_of_a_web_request/) - [Tips for writing tutorials](/tutorials/tips_for_tutorial_writing/) - uncategorized - [about.gitlab.com](/uncategorized/about-gitlab-com/) - [access-gcp-hosts](/uncategorized/access-gcp-hosts/) - [Access Requests](/uncategorized/access-requests/) - [Alert about SSL certificate expiration](/uncategorized/alert-for-ssl-certificate-expiration/) - [Alert Routing](/uncategorized/alert-routing/) - alerts - [component\\_saturation\\_slo\\_out\\_of\\_bounds:gcp\\_quota\\_limit](/uncategorized/alerts/gcp_quota_limit/) - [Alerts Should Have Runbook Annotations](/uncategorized/alerts-should-have-runbook-annotations/) - [Aptly](/uncategorized/aptly/) - [Auto DevOps](/uncategorized/auto-devops/) - [Benchmarking Database Instances](/uncategorized/benchmark-database-instance/) - [Blocking a project causing high load](/uncategorized/block-high-load-project/) - [Blocked user login attempts are high](/uncategorized/blocked-user-logins/) - [Canary in GCP production and staging](/uncategorized/canary/) - [Cloud SQL Data Export](/uncategorized/cloudsql-data-export/) - [Create:Code Review Group Runbook](/uncategorized/code-review-group/) - [Release Artifact Bucket](/uncategorized/creating-bucket-for-release-artifacts/) - [Debug failed chef provisioning](/uncategorized/debug-failed-chef-provisioning/) - [Deleting a project manually](/uncategorized/delete-projects-manually/) - [Deleted Project Restoration](/uncategorized/deleted-project-restore/) - [Deploy Cmd for Chatops](/uncategorized/deploycmd/) - [GitLab dev environment](/uncategorized/dev-environment/) - [disable-chef-runs-on-a-vm](/uncategorized/disable-chef-runs-on-a-vm/) - [Domain Registration](/uncategorized/domain-registration/) - [Error budget weekly reporting](/uncategorized/error-budget-weekly/) - externalvendors - [Getting help with GCP support and Rackspace](/uncategorized/externalvendors/GCP-rackspace-support/) - [Feature Flags](/uncategorized/featureflags/) - [Getting setup with Google gcloud CLI](/uncategorized/gcloud-cli/) - [gcp-network-intelligence](/uncategorized/gcp-network-intelligence/) - [GCP Projects](/uncategorized/gcp-project/) - [Managing Geekbot standups](/uncategorized/geekbot-standup/) - gke-runner - [index](/uncategorized/gke-runner/) - [INSTRUCTIONS](/uncategorized/gke-runner/INSTRUCTIONS/) - [Chef secrets using GKMS](/uncategorized/gkms-chef-secrets/) - [GitLab Flavored Markdown (GLFM)](/uncategorized/glfm-markdown/) - [granting-rails-or-db-access](/uncategorized/granting-rails-or-db-access/) - [GitLab Job Completion](/uncategorized/job_completion/) - [Managing Chef](/uncategorized/manage-chef/) - [Manage DNS entries](/uncategorized/manage-dns-entries/) - [Migration Skipping](/uncategorized/migration-skipping/) - [Missing Repositories](/uncategorized/missing_repos/) - [Google mtail for prometheus metrics](/uncategorized/mtail/) - [namespace-restore](/uncategorized/namespace-restore/) - [Node CPU alerts](/uncategorized/node_cpu/) - [Node Reboots](/uncategorized/node-reboots/) - [Omnibus package troubleshooting](/uncategorized/omnibus-package-updates/) - [OPS-GITLAB-NET Users and Access Tokens](/uncategorized/ops-gitlab-net-pat/) - [OSQuery](/uncategorized/osquery/) - [patching-production](/uncategorized/patching-production/) - [Periodic Job Monitoring](/uncategorized/periodic_job_monitoring/) - [Project exports](/uncategorized/project-export/) - [Rails is down](/uncategorized/rails-is-down/) - release.gitlab.net - [`release.gitlab.net`](/uncategorized/release.gitlab.net/) - [Remove Blobs](/uncategorized/remove-blobs/) - [Removing kernels from fleet](/uncategorized/remove-kernels/) - [Ruby profiling](/uncategorized/ruby-profiling/) - [Shared Configurations](/uncategorized/shared-configurations/) - snowplow - [index](/uncategorized/snowplow/) - [GitLab staging environment](/uncategorized/staging-environment/) - [subnet-allocations](/uncategorized/subnet-allocations/) - [Terraform Broken Main](/uncategorized/terraform-broken-main/) - [Application Database Queries](/uncategorized/tracing-app-db-queries/) - [Upgrades and Rollbacks of Application Code](/uncategorized/upgrade-and-rollback/) - [How to upload a file to Google Cloud Storage from any system without a credentials configuration](/uncategorized/upload-file-to-gcs-using-signed-url/) - [Uploads](/uncategorized/uploads/) - [Workers under heavy load because of being used as a CDN](/uncategorized/workers-high-load/) - [Configuring and Using the Yubikey](/uncategorized/yubikey/) - [Rate of successful user logins is zero](/uncategorized/zero-successful-user-logins/) - vault - [Access Management for Vault](/vault/access/) - [Vault Administration](/vault/administration/) - [Hashicorp Vault for Infrastructure Service](/vault/) - [Troubleshooting Hashicorp Vault](/vault/troubleshooting/) - [How to Use Vault for Secrets Management in Infrastructure](/vault/usage/) - [Vault Audit Log Analysis](/vault/usage-analysis/) - [Vault Secrets Management](/vault/vault/) - version - [version.gitlab.com Service](/version/) - [version.gitlab.com Runbook](/version/version-gitlab-com/) - web - [Diagnostic Reports](/web/diagnostic-reports/) - [GitLab.com Web Service](/web/) - [Rails middleware: path traversal](/web/rails-middleware-path-traversal/) - [Static objects caching](/web/static-objects-caching/) - [Static repository objects caching](/web/static-repository-objects-caching/) - [Workhorse Image Scaler](/web/workhorse-image-scaler/) - web-pages - [GitLab Pages Service](/web-pages/) - websockets - [Websockets Service](/websockets/) - [Custom Websocket Alerts](/websockets/slow-broken-upgrades/) - wikis - [Wikis](/wikis/) - wiz-runtime-sensor - [Wiz Sensor Service](/wiz-runtime-sensor/) - woodhouse - [Woodhouse Service](/woodhouse/) - woodhouse-slack - [Woodhouse Slack bot Service](/woodhouse-slack/) - [Woodhouse-Slack Overview](/woodhouse-slack/overview/) - workhorse - [Workhorse Service](/workhorse/) - [Workhorse Apdex Degradation](/workhorse/workhorse-apdex-degradation/) - workspaces - [Remote Development Workspaces Service](/workspaces/) - zoekt - [Exact code search Service](/zoekt/) (() => { const scroller = document.getElementById('starlight\\_\\_sidebar'); if (!window.\\_starlightScrollRestore || !scroller) return; scroller.scrollTop = window.\\_starlightScrollRestore; delete window.\\_starlightScrollRestore; })(); [GitLab](https://gitlab.com/gitlab-com/runbooks)[Code Context](https://code-context.runway.gitlab.net/runbooks-docs) Select theme DarkLightAuto StarlightThemeProvider.updatePickers(); const a=document.getElementById(\"starlight\\_\\_sidebar\"),n=a?.querySelector(\"sl-sidebar-state-persist\"),o=\"sl-sidebar-state\",i=()=>{let t=[];const e=n?.dataset.hash||\"\";try{const s=sessionStorage.getItem(o),r=JSON.parse(s||\"{}\");Array.isArray(r.open)&&r.hash===e&&(t=r.open)}catch{}return{hash:e,open:t,scroll:a?.scrollTop||0}},c=t=>{try{sessionStorage.setItem(o,JSON.stringify(t))}catch{}},d=()=>c(i()),l=(t,e)=>{const s=i();s.open[e]=t,c(s)};n?.addEventListener(\"click\",t=>{if(!(t.target instanceof Element))return;const e=t.target.closest(\"summary\")?.closest(\"details\");if(!e)return;const s=e.querySelector(\"sl-sidebar-restore\"),r=parseInt(s?.dataset.index||\"\");isNaN(r)||l(!e.open,r)});addEventListener(\"visibilitychange\",()=>{document.visibilityState===\"hidden\"&&d()});addEventListener(\"pageHide\",d); On this page - [Overview](#_top) - [Logging](#logging) ## On this page - [Overview](#_top) - [Logging](#logging) # Redis Cluster Cache Service - [Service Overview](https://dashboards.gitlab.net/d/redis-cluster-cache-main/redis-cluster-cache-overview) - **Alerts**: <https://alerts.gitlab.net/#/alerts?filter=%7Btype%3D%22redis-cluster-cache%22%2C%20tier%3D%22db%22%7D> - **Label**: gitlab-com/gl-infra/production~“Service::RedisClusterCache” ## Logging [Section titled “Logging”](#logging) - system [Edit page](https://gitlab.com/gitlab-com/runbooks/-/edit/master/docs/redis-cluster-cache/README.md) [Previous Scaling Redis Cluster](/redis/scaling-redis-cluster/) [Next Removing cache entries from Redis](/redis-cluster-cache/remove-cache-entries/)",
    "ground_truth": "To upload a file to Google Cloud Storage, you can use the method described in the tutorial titled 'How to upload a file to Google Cloud Storage from any system without a credentials configuration.' This tutorial provides step-by-step instructions on utilizing Google Cloud services for file uploads."
  }
]